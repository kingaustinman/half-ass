{
 "Resources": {
  "scrumplhandlerServiceRoleA0330258": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "deployment-qualifier",
      "Value": "asd"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/scrumpl-handler/ServiceRole/Resource"
   }
  },
  "scrumplhandlerF1B655B6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-549476090449-us-west-2",
     "S3Key": "7e2edb47a36a6200f980c7489458f8be684e5e3f3a73d6a799891237b5ba9c7e.zip"
    },
    "Environment": {
     "Variables": {
      "LOGGER_LEVEL": "info",
      "LOGGER_SERVICE": "halfass-asd-scrumplapi-scrumpl-handler",
      "LOGGER_FORMAT": "json",
      "NODE_OPTIONS": "--enable-source-maps",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "halfass-asd-scrumplapi-scrumpl-handler",
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "scrumplhandlerServiceRoleA0330258",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Tags": [
     {
      "Key": "deployment-qualifier",
      "Value": "asd"
     }
    ],
    "Timeout": 30
   },
   "DependsOn": [
    "scrumplhandlerServiceRoleA0330258"
   ],
   "Metadata": {
    "aws:cdk:path": "apiStack/scrumpl-handler/Resource",
    "aws:asset:path": "asset.7e2edb47a36a6200f980c7489458f8be684e5e3f3a73d6a799891237b5ba9c7e",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "scrumplhandlerLogRetentionCEEA7066": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "scrumplhandlerF1B655B6"
       }
      ]
     ]
    },
    "RetentionInDays": 7
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/scrumpl-handler/LogRetention/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "deployment-qualifier",
      "Value": "asd"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:PutRetentionPolicy",
        "logs:DeleteRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": "nodejs16.x",
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-549476090449-us-west-2",
     "S3Key": "5fa1330271b8967d9254ba2d4a07144f8acefe8b77e6d6bba38261373a50d5f8.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    },
    "Tags": [
     {
      "Key": "deployment-qualifier",
      "Value": "asd"
     }
    ]
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ],
   "Metadata": {
    "aws:cdk:path": "apiStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
    "aws:asset:path": "asset.5fa1330271b8967d9254ba2d4a07144f8acefe8b77e6d6bba38261373a50d5f8",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "apihttpApiLambdaapi18A9123C": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "CorsConfiguration": {
     "AllowCredentials": false,
     "AllowHeaders": [
      "Content-Type",
      "X-Amz-Date",
      "Authorization",
      "X-Api-Key",
      "X-Amz-Security-Token",
      "X-Amz-User-Agent",
      "x-trace-id"
     ],
     "AllowMethods": [
      "*"
     ],
     "AllowOrigins": [
      "*"
     ]
    },
    "Name": "halfass-asd-scrumplapi-api",
    "ProtocolType": "HTTP",
    "Tags": {
     "deployment-qualifier": "asd"
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/httpApiLambda-api/Resource"
   }
  },
  "apihttpApiLambdaapiDefaultStage63517571": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "apihttpApiLambdaapi18A9123C"
    },
    "AutoDeploy": true,
    "StageName": "$default",
    "Tags": {
     "deployment-qualifier": "asd"
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/httpApiLambda-api/DefaultStage/Resource"
   }
  },
  "apihttpApiLambdaapiGETlambdaintegration0EBAF1216": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "apihttpApiLambdaapi18A9123C"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "scrumplhandlerF1B655B6",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/httpApiLambda-api/GET--/lambda-integration-0/Resource"
   }
  },
  "apihttpApiLambdaapiGETlambdaintegration0Permission526022B3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "scrumplhandlerF1B655B6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-west-2:549476090449:",
       {
        "Ref": "apihttpApiLambdaapi18A9123C"
       },
       "/*/*/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/httpApiLambda-api/GET--/lambda-integration-0-Permission"
   }
  },
  "apihttpApiLambdaapiGETB3B905A4": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "apihttpApiLambdaapi18A9123C"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "GET /",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "apihttpApiLambdaapiGETlambdaintegration0EBAF1216"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/httpApiLambda-api/GET--/Resource"
   }
  },
  "apihttpApiLambdaapiGETabclambdaintegration13CDB18B0": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "apihttpApiLambdaapi18A9123C"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "scrumplhandlerF1B655B6",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/httpApiLambda-api/GET--abc/lambda-integration-1/Resource"
   }
  },
  "apihttpApiLambdaapiGETabclambdaintegration1Permission0157F76C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "scrumplhandlerF1B655B6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-west-2:549476090449:",
       {
        "Ref": "apihttpApiLambdaapi18A9123C"
       },
       "/*/*/abc"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/httpApiLambda-api/GET--abc/lambda-integration-1-Permission"
   }
  },
  "apihttpApiLambdaapiGETabcEE520C12": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "apihttpApiLambdaapi18A9123C"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "GET /abc",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "apihttpApiLambdaapiGETabclambdaintegration13CDB18B0"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/httpApiLambda-api/GET--abc/Resource"
   }
  },
  "apihttpApiLambdaapiGETabcorderNumberlambdaintegration29B5A05D4": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "apihttpApiLambdaapi18A9123C"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "scrumplhandlerF1B655B6",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/httpApiLambda-api/GET--abc--{orderNumber}/lambda-integration-2/Resource"
   }
  },
  "apihttpApiLambdaapiGETabcorderNumberlambdaintegration2Permission678B8865": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "scrumplhandlerF1B655B6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-west-2:549476090449:",
       {
        "Ref": "apihttpApiLambdaapi18A9123C"
       },
       "/*/*/abc/{orderNumber}"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/httpApiLambda-api/GET--abc--{orderNumber}/lambda-integration-2-Permission"
   }
  },
  "apihttpApiLambdaapiGETabcorderNumber8FB2C9A3": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "apihttpApiLambdaapi18A9123C"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "GET /abc/{orderNumber}",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "apihttpApiLambdaapiGETabcorderNumberlambdaintegration29B5A05D4"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/api/httpApiLambda-api/GET--abc--{orderNumber}/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/01QS07DMBA9S/fONC0LsqRFQiAhhMIBoqkzGCeOHWWcVpWVu2M7BXX1Zuz3s/dQVRDKDV64kG1fGH2C8OVR9iIeNcHgcGqxsa6ljuEjw8tspdfOCo0DhNoZEs/fNuOnM1pe07pOi+CHBpnJMxwSxB2Os+zJH5FJrPYQouDfNYlpGjRz3BZhnGJ4d6omTzYTcNQKPV3wet5n6WHUSRVrq1zlzXpSE/651W72tCyiJnbzJEnkJomtrcqE28UiygLN+INQbp5uP7JNeJ94Y4RX78cUnHBNTlPOytNdiZidPhA63p53Feweo3/HWhfTHF80ENQr/gIQgNKTjQEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "apiStack/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}